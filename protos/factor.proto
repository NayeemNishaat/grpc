syntax = "proto3";

package factor;

service FactorService {
  // server streaming api
  rpc Factor (FcatorRequest) returns (stream FactorResponses) {
    option deadline = 200;
  }
}

message FcatorRequest {
  int32 number = 1;
}

message FactorSuccessResponse {
  int32 number = 1;
}

message FactorFailResponse {
  bool error = 1;
  string message = 2;
}


message FactorResponses {
  oneof FactorResponse {
    FactorSuccessResponse factorSuccessResponse = 1;
    FactorFailResponse factorFailResponse = 2;
  }
  // Other variables
}

// ENUM
enum Corpus {
  CORPUS_UNSPECIFIED = 0; // Important: enum starts with 0 and it's the default
  CORPUS_UNIVERSAL = 1;
  CORPUS_WEB = 2;
  CORPUS_IMAGES = 3;
  CORPUS_LOCAL = 4;
  CORPUS_NEWS = 5;
  CORPUS_PRODUCTS = 6;
  CORPUS_VIDEO = 7;
}

message SearchRequest {
  string query = 1;
  int32 page_number = 2;
  int32 results_per_page = 3;
  Corpus corpus = 4;
}

enum EnumAllowingAlias {
  option allow_alias = true;
  EAA_UNSPECIFIED = 0;
  EAA_STARTED = 1;
  EAA_RUNNING = 1;
  EAA_FINISHED = 2;
}

enum EnumNotAllowingAlias {
  ENAA_UNSPECIFIED = 0;
  ENAA_STARTED = 1;
  // ENAA_RUNNING = 1;  // Uncommenting this line will cause a warning message.
  ENAA_FINISHED = 2;
}

// MAP
// map<key_type, value_type> map_field = N;
message Project {
  // variables
}

message {
  map<string, Project> projects = 1;
  repeated string nums = 2
}

message Foo {
  reserved 2, 15, 9 to 11;
  reserved "foo", "bar";
}